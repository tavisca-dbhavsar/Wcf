//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ClientService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientService.IAddandCreate")]
    public interface IAddandCreate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddandCreate/CreateEmployee", ReplyAction="http://tempuri.org/IAddandCreate/CreateEmployeeResponse")]
        void CreateEmployee(EmployeeWCF.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddandCreate/CreateEmployee", ReplyAction="http://tempuri.org/IAddandCreate/CreateEmployeeResponse")]
        System.Threading.Tasks.Task CreateEmployeeAsync(EmployeeWCF.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddandCreate/AddRemarksToEmployee", ReplyAction="http://tempuri.org/IAddandCreate/AddRemarksToEmployeeResponse")]
        void AddRemarksToEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddandCreate/AddRemarksToEmployee", ReplyAction="http://tempuri.org/IAddandCreate/AddRemarksToEmployeeResponse")]
        System.Threading.Tasks.Task AddRemarksToEmployeeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddandCreateChannel : Client.ClientService.IAddandCreate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddandCreateClient : System.ServiceModel.ClientBase<Client.ClientService.IAddandCreate>, Client.ClientService.IAddandCreate {
        
        public AddandCreateClient() {
        }
        
        public AddandCreateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddandCreateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddandCreateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddandCreateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateEmployee(EmployeeWCF.Employee employee) {
            base.Channel.CreateEmployee(employee);
        }
        
        public System.Threading.Tasks.Task CreateEmployeeAsync(EmployeeWCF.Employee employee) {
            return base.Channel.CreateEmployeeAsync(employee);
        }
        
        public void AddRemarksToEmployee() {
            base.Channel.AddRemarksToEmployee();
        }
        
        public System.Threading.Tasks.Task AddRemarksToEmployeeAsync() {
            return base.Channel.AddRemarksToEmployeeAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientService.IRetrieve")]
    public interface IRetrieve {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieve/GetAllEmployees", ReplyAction="http://tempuri.org/IRetrieve/GetAllEmployeesResponse")]
        EmployeeWCF.Employee[] GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieve/GetAllEmployees", ReplyAction="http://tempuri.org/IRetrieve/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<EmployeeWCF.Employee[]> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieve/SearchById", ReplyAction="http://tempuri.org/IRetrieve/SearchByIdResponse")]
        EmployeeWCF.Employee SearchById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieve/SearchById", ReplyAction="http://tempuri.org/IRetrieve/SearchByIdResponse")]
        System.Threading.Tasks.Task<EmployeeWCF.Employee> SearchByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieve/SearchByName", ReplyAction="http://tempuri.org/IRetrieve/SearchByNameResponse")]
        EmployeeWCF.Employee[] SearchByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRetrieve/SearchByName", ReplyAction="http://tempuri.org/IRetrieve/SearchByNameResponse")]
        System.Threading.Tasks.Task<EmployeeWCF.Employee[]> SearchByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRetrieveChannel : Client.ClientService.IRetrieve, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetrieveClient : System.ServiceModel.ClientBase<Client.ClientService.IRetrieve>, Client.ClientService.IRetrieve {
        
        public RetrieveClient() {
        }
        
        public RetrieveClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RetrieveClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RetrieveClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RetrieveClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployeeWCF.Employee[] GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<EmployeeWCF.Employee[]> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public EmployeeWCF.Employee SearchById(int id) {
            return base.Channel.SearchById(id);
        }
        
        public System.Threading.Tasks.Task<EmployeeWCF.Employee> SearchByIdAsync(int id) {
            return base.Channel.SearchByIdAsync(id);
        }
        
        public EmployeeWCF.Employee[] SearchByName(string name) {
            return base.Channel.SearchByName(name);
        }
        
        public System.Threading.Tasks.Task<EmployeeWCF.Employee[]> SearchByNameAsync(string name) {
            return base.Channel.SearchByNameAsync(name);
        }
    }
}
